# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# Note summary: we define a workflow. A workflow has a name and can be triggered by one or more event,
# the workflow contain one or more jobs, each job will run inside its own VM (virtual machine) runner and has one or more steps
# that either runs an action or a shell script that we defined

name: Java CI with Maven

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
          - 1433:1433
        options: >-
          --health-cmd 'exit 0'  # Simplifies the health check for the purpose of this example
          --health-interval 10s
          --health-timeout 10s
          --health-retries 3
        env:
          SA_PASSWORD: "sa123456"
          ACCEPT_EULA: "Y"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Wait for SQL Server to be ready
        run: |
          echo "Waiting for SQL Server to start..."
          for i in {1..30}; do
              if /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "sa123456" -Q "SELECT 1" &> /dev/null; then
                  echo "SQL Server is up and running!"
                  exit 0
              fi
              echo "Waiting for SQL Server to be ready...($i)"
              sleep 2
          done
          echo "SQL Server did not start in time."
          exit 1

      - name: Build and test with Maven
        env:
          SQLSERVER_DB: userdb
          SQLSERVER_USER: sa
          SQLSERVER_PASSWORD: sa123456
        run: mvn --batch-mode package



